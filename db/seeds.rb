# Generations
kanto = Generation.find_or_create_by(region: 'Kanto', description: "The Kanto region (Japanese: カントー地方 Kanto region) is a region of the Pokémon world. Kanto is located east of Johto, which together form a joint landmass that is south of Sinnoh.
Kanto is the setting of the first generation of games and can be explored in generations II, III, IV, and VII.
Professor Oak is the resident Pokémon Professor and gives Pokémon Trainers a choice between Bulbasaur, Charmander, or Squirtle as their starter Pokémon. In Pokémon Yellow, the only choice is a Pikachu that he recently caught, although he did have an Eevee. In Let's Go, Pikachu!, the player chooses Pikachu. In Let's Go, Eevee!, the player chooses Eevee. In the games, the player begins their journey in Pallet Town and ends it at Indigo Plateau.
The artwork from the early games depict Kanto as grassland. Starting in Generation III, it is shown with denser tree coverage.
All cities in Kanto are named after colors, with the exception of Pallet Town, which refers to a palette, meaning a range of colors. Unlike every other region, Kanto's fictional name reflects its real-world name.", history: "The Kanto region has a rich history of creating Pokémon with technology. Researchers of Kanto have been great at their job. A researcher once cloned Mew through its genes and created the Genetic Pokémon Mewtwo. Porygon, the Virtual Pokémon, was also created by humans in Kanto. In contemporary history, Red/Leaf is given a Pokémon by Professor Oak for personal safety. Professor Oak also gives his grandson, Blue, a Pokémon and asks Blue and Red/Leaf to help him fill the Pokédex, a complete encyclopedia on Pokémon. Thus, the journey of Red/Leaf begins. Red/Leaf travels across the Kanto region and collects all eight Gym Badges. During their journey, Red/Leaf comes across Team Rocket, an evil organization behind wrongdoings about Pokémon. Red/Leaf stops Team Rocket and defeats Giovanni, their boss as well as the Gym Leader of Viridian Gym, who then disbands Team Rocket. In the meantime, Blue, who has also collected all of the Kanto Gym Badges, defeats the Elite Four at the Indigo League and becomes the champion of the Kanto region. Finally, Red/Leaf makes it up to him and defeats him to gain the title of the Indigo League Champion. 
Three years later, Ethan/Kris/Lyra, a Trainer from Johto, comes to Kanto and collects all eight Kanto Gym Badges. Ethan/Kris/Lyra is the current Indigo League Champion and has also met and defeated Red.", geography: "The Kanto region has a very temperate climate and not many notable landscape features, though this may be due to the region's origins in the Generation I games.
The majority of the Kanto region are forests and plains. Many of the major Kanto cities are in the center of the region, with close access to virtually every environment such as the sea, mountains, forests, etc. Kanto is mostly dominated by land, but has a large bay in the middle which opens to a sea in the southwest. Kanto has a contrast between urban cities and rural towns. Kanto has several mountain ranges, which are mostly in northern and western Kanto. Indigo Plateau and Victory Road mountain range divides Kanto from the neighboring Johto region.")
johto = Generation.find_or_create_by(region: 'Johto', description: "The Johto region (Japanese: ジョウト地方 Johto region) is a region of the Pokémon world. Johto is located west of Kanto, which together form a joint landmass that is south of Sinnoh and Sinjoh Ruins.
It was the second core series region to be introduced. First explored in Pokémon Gold and Silver, it is home to an additional 100 Pokémon that were not present in the previous games. It is also the setting of Pokémon Crystal, Pokémon HeartGold, and Pokémon SoulSilver.
Players begin their journey in New Bark Town, where Professor Elm offers either Chikorita, Cyndaquil, or Totodile to beginning Pokémon Trainers.
The English-version names of most of the cities in Johto are names of plants or things related to plants.", history: "1,500 years before modern times, the place now known as the Ruins of Alph was built in Johto, and the earliest known system for writing—the modern Latin alphabet—was developed. Although no one knows exactly who built the Ruins of Alph, research indicates that the people in question were an ancient civilization that wished to co-exist with the enigmatic Unown that bear great similarity to the alphabet letters. Not only did that tribe impart messages on the ruins' walls describing the Unown, but they also erected a Pokémon statue for an unknown reason.
At some point later, outsiders began to gather near the ruins. As the Unown were timid creatures, they rejected contact with anyone but the clan that protected them. To ensure the Unown's well being, the Ruins of Alph's inhabitants decided to leave the region, but not without devising complicated puzzles so that one day the Unown could be summoned again. As for the clan, their quest led them to a mountain far to the north, where they met another group of people who had hailed from the Spear Pillar. Together, the two groups built a temple in honor of Arceus, which incorporated elements from both the Ruins of Alph and the Spear Pillar; this collaboration probably has to do with the underlying relationship between Arceus and the Unown. The temple, too, has since been left in ruins and its lowest floor is now known as the Sinjoh Ruins; however, the ritual of honoring Legendary Pokémon through dance circulated back to Johto, specifically to Ecruteak City.
Approximately 700 years before modern times, the people of Ecruteak built two nine-tier towers with the hopes of fostering friendship and hope between Pokémon and humans. They were the Brass Tower in the west, which was said to awaken Pokémon, and the Bell Tower in the east, where Pokémon were said to rest. Both towers became the roost of powerful flying Pokémon: Lugia and Ho-Oh, respectively. It is unknown what made the residents revere Lugia and Ho-Oh, but a separate tale indicates that Lugia had previously had an encounter with the people of Johto when it stopped a war on the Whirl Islands, which were a single island at that time. The towers stood strong for about 550 years, when a lightning bolt struck the Brass Tower. It was engulfed in flames that raged for three days. A sudden downpour finally put out the blaze, but it had already burnt to the ground. Three nameless Pokémon perished in the fire, but Ho-Oh descended from the sky and resurrected them. The revived Pokémon were made to embody three powers: the lightning that struck the tower, the fire that burned the tower, and the rain that put out the fire. When the Pokémon appeared, they struck terror in those who saw their rise. The three Pokémon, knowing their own power, fled, running like the wind off into Johto's grassland. Similarly, both Lugia and Ho-Oh flew away at the sight of the growing distance between people and Pokémon; while they never returned to Ecruteak, they yearned for a person to touch the hearts and souls of Pokémon once more.In contemporary history, Ethan/Kris/Lyra leaves New Bark Town on an errand for Professor Elm. A red-haired boy steals one of Elm's three Pokémon, and challenges him/her as Ethan/Kris/Lyra's journey across Johto continues. A revived Team Rocket from Kanto, using plans formulated three years prior, enrages many Gyarados, including a red one, at the Lake of Rage; they then proceed to take over the Goldenrod Radio Tower in a desperate attempt to contact Giovanni. When they are defeated and Giovanni fails to return due to Celebi's intervention, the interim leader, Archer, vows to never again re-form Team Rocket. Ethan/Kris/Lyra continues to gather Johto's Badges, eventually gaining all eight and traveling to the Pokémon League at Indigo Plateau in Kanto, later to defeat the current Champion and get into the Hall of Fame.
But Ethan/Kris/Lyra's most notable effect on Johto lies in their ability to encounter all three of the Legendary beasts, as well as summon the Unown, Lugia and Ho-Oh after their long absence. A new chapter in the region's history begins.
Around these times other, smaller events occurred. 500 years before modern days, the Cianwood City Pharmacy, the world's oldest pharmacy, was built. Around 400 years ago, Azalea Town in Johto was struck by a long-term drought wave; after bringing the rain back once again by yawning, Slowpoke gained an honorable position in that town.
", geography: "The Johto region, like its neighboring region, Kanto, has a temperate climate. However, Johto's climate is a bit wetter than that of Kanto's.
Johto is notably more rural than the Kanto region, which leans more towards to the urban side. The region has an abundance of water to the west and south, with Cianwood City most likely being on a separate landmass. However, Johto is still dominated by land. The western parts of the region are mainly low-lying and forested and contain most of the region's population. Johto's ultra-modern Goldenrod City is found in the heart of the region, on the coast. It is the technological, industrial, and economic area of the Johto region. Due to its centralized position in the region, many smaller but important cities and towns connect to the city. There is one large mountain range encompassing almost the entire eastern half of the region, which separates Kanto and Johto and contains Mt. Silver. Blackthorn City is nestled deep between the mountains and is very unique because it is a city for Dragon Tamers.")
hoenn = Generation.find_or_create_by(region: 'Hoenn', description: '', history: '', geography: '')
sinnoh = Generation.find_or_create_by(region: 'Sinnoh', description: '', history: '', geography: '')
unova = Generation.find_or_create_by(region: 'Unova', description: '', history: '', geography: '')
kalos = Generation.find_or_create_by(region: 'Kalos', description: '', history: '', geography: '')
alola = Generation.find_or_create_by(region: 'Alola', description: '', history: '', geography: '')
galar = Generation.find_or_create_by(region: 'Galar', description: '', history: '', geography: '')

# Types specify pokemon id
normal = Type.find_or_create_by(name: 'Normal',double_damage_from: 'Fighting', double_damage_to: '', half_damage_from: '', half_damage_to: 'Rock, Steel', no_damage_from: 'Ghost', no_damage_to: 'Ghost')
fighting = Type.find_or_create_by(name: 'Fighting',double_damage_from: 'Flying, Psychic, Fairy', double_damage_to: 'Normal, Rock, Steel, Ice, Dark', half_damage_from: 'Rock, Bug, Dark', half_damage_to: 'Flying, Poison, Bug, Psychic, Fairy', no_damage_from: '', no_damage_to: 'Ghost')
flying = Type.find_or_create_by(name: 'Flying',double_damage_from: 'Rock, Electric, Ice', double_damage_to: 'Fighting, Bug, Grass', half_damage_from: 'Fighting, Bug, Grass', half_damage_to: 'Rock, Steel, Electric', no_damage_from: 'Ground', no_damage_to: '')
poison = Type.find_or_create_by(name: 'Poison',double_damage_from: 'Ground, Psychic', double_damage_to: 'Grass, Fairy', half_damage_from: 'Fighting, Poison, Bug, Grass, Fairy', half_damage_to: 'Poison, Ground, Rock, Ghost', no_damage_from: '', no_damage_to: 'Steel')
ground = Type.find_or_create_by(name: 'Ground',double_damage_from: 'Water, Grass, Ice', double_damage_to: 'Poison, Rock, Steel, Fire, Electric', half_damage_from: 'Poison, Rock', half_damage_to: 'Bug, Grass', no_damage_from: 'Electric', no_damage_to: 'Flying')
rock = Type.find_or_create_by(name: 'Rock',double_damage_from: 'Fighting, Ground, Steel, Water, Grass', double_damage_to: 'Flying, Bug, Fire, Ice', half_damage_from: 'Normal, Flying, Poison, Fire', half_damage_to: 'Fighting, Ground, Steel', no_damage_from: '', no_damage_to: '')
bug = Type.find_or_create_by(name: 'Bug',double_damage_from: 'Flying, Rock, Fire', double_damage_to: 'Grass, Psychic, Dark', half_damage_from: 'Fighting, Ground, Grass', half_damage_to: 'Fighting, Flying, Poison, Ghost, Steel, Fire, Fairy', no_damage_from: '', no_damage_to: '')
ghost = Type.find_or_create_by(name: 'Ghost',double_damage_from: 'Ghost, Dark', double_damage_to: 'Ghost, Psychic', half_damage_from: 'Poison, Bug', half_damage_to: 'Dark', no_damage_from: 'Normal, Fighting', no_damage_to: 'Normal')
steel = Type.find_or_create_by(name: 'Steel',double_damage_from: 'Fighting, Ground, Fire', double_damage_to: 'Rock, Ice, Fairy', half_damage_from: 'Normal, Flying, Rock, Bug, Steel, Grass, Psychic, Ice, Dragon, Fairy', half_damage_to: 'Steel, Fire, Water, Electric', no_damage_from: 'Poison', no_damage_to: '')
fire = Type.find_or_create_by(name: 'Fire',double_damage_from: 'Ground, Rock, Water', double_damage_to: 'Bug, Steel, Grass, Ice', half_damage_from: 'Bug, Steel, Fire, Grass, Ice, Fairy', half_damage_to: 'Rock, Fire, Water, Dragon', no_damage_from: '', no_damage_to: '')
water = Type.find_or_create_by(name: 'Water',double_damage_from: 'Grass, Electric', double_damage_to: 'Ground, Rock, Fire', half_damage_from: 'Steel, Fire, Water, Ice', half_damage_to: 'Water, Grass, Dragon', no_damage_from: '', no_damage_to: '')
grass = Type.find_or_create_by(name: 'Grass',double_damage_from: 'Flying, Poison, Bug, Fire, Ice', double_damage_to: 'Ground, Rock, Water', half_damage_from: 'Ground, Water, Grass, Electric', half_damage_to: 'Flying, Poison, Bug, Steel, Fire, Grass, Dragon', no_damage_from: '', no_damage_to: '')
electric = Type.find_or_create_by(name: 'Electric',double_damage_from: 'Ground', double_damage_to: 'Flying, Water', half_damage_from: 'Flying, Steel, Electric', half_damage_to: 'Grass, Electric, Dragon', no_damage_from: '', no_damage_to: 'Ground')
psychic = Type.find_or_create_by(name: 'Psychic',double_damage_from: 'Bug, Ghost, Dark', double_damage_to: 'Fighting, Poison', half_damage_from: 'Fighting, Psychic', half_damage_to: 'Steel, Psychic', no_damage_from: '', no_damage_to: 'Dark')
ice = Type.find_or_create_by(name: 'Ice',double_damage_from: 'Fighting, Rock, Steel, Fire', double_damage_to: 'Flying, Ground, Grass, Dragon', half_damage_from: 'Ice', half_damage_to: 'Steel, Fire, Water, Ice', no_damage_from: '', no_damage_to: '')
dragon = Type.find_or_create_by(name: 'Dragon',double_damage_from: 'Ice, Dragon, Fairy', double_damage_to: 'Dragon', half_damage_from: 'Fire, Water, Grass, Electric', half_damage_to: 'Steel', no_damage_from: '', no_damage_to: 'Fairy')
dark = Type.find_or_create_by(name: 'Dark',double_damage_from: 'Fighting, Bug, Fairy', double_damage_to: 'Ghost, Psychic', half_damage_from: 'Ghost, Dark', half_damage_to: 'Fighting, Dark, Fairy', no_damage_from: 'Psychic', no_damage_to: '')
fairy = Type.find_or_create_by(name: 'Fairy',double_damage_from: 'Poison, Steel', double_damage_to: 'Fighting, Dragon, Dark', half_damage_from: 'Fighting, Bug, Dark', half_damage_to: 'Poison, Steel, Fire', no_damage_from: 'Dragon', no_damage_to: '')

# Games ## Game.find_or_create_by(name: '', release_date: '', description: '', generation_id: )
red = Game.find_or_create_by(name: 'Red', release_date: '1996', description: '', generation_id: kanto.id)
blue = Game.find_or_create_by(name: 'Blue', release_date: '1996', description: '', generation_id: kanto.id)
yellow = Game.find_or_create_by(name: 'Yellow', release_date: '1998', description: '', generation_id: kanto.id)
fire_red = Game.find_or_create_by(name: 'Fire-Red', release_date: '2004', description: '', generation_id: kanto.id)
leaf_green = Game.find_or_create_by(name: 'Leaf-Green', release_date: '2004', description: '', generation_id: kanto.id)
silver = Game.find_or_create_by(name: 'Silver', release_date: '1999', description: '', generation_id: johto.id)
gold = Game.find_or_create_by(name: 'Gold', release_date: '1999', description: '', generation_id: johto.id)
crystal = Game.find_or_create_by(name: 'Crystal', release_date: '2000', description: '', generation_id: johto.id)
heart_gold = Game.find_or_create_by(name: 'Heart-Gold', release_date: '2009', description: '', generation_id: johto.id)
soul_silver = Game.find_or_create_by(name: 'Soul-Silver', release_date: '2009', description: '', generation_id: johto.id)
ruby = Game.find_or_create_by(name: 'Ruby', release_date: '2002', description: '', generation_id: hoenn.id)
sapphire = Game.find_or_create_by(name: 'Sapphire', release_date: '2002', description: '', generation_id: hoenn.id)
emerald = Game.find_or_create_by(name: 'Emerald', release_date: '2004', description: '', generation_id: hoenn.id)
diamond = Game.find_or_create_by(name: 'Diamond', release_date: '', description: '', generation_id: sinnoh.id)
pearl = Game.find_or_create_by(name: 'Pearl', release_date: '', description: '', generation_id: sinnoh.id)
platinum= Game.find_or_create_by(name: 'Platinum', release_date: '', description: '', generation_id: sinnoh.id)
black = Game.find_or_create_by(name: 'Black', release_date: '', description: '', generation_id: unova.id)
white = Game.find_or_create_by(name: 'White', release_date: '', description: '', generation_id: unova.id)
black_two = Game.find_or_create_by(name: 'Black 2', release_date: '', description: '', generation_id: unova.id)
white_two = Game.find_or_create_by(name: 'White 2', release_date: '', description: '', generation_id: unova.id)